# packer
# Cache objects
packer/packer_cache/

# Crash log
packer/crash.log

# https://www.packer.io/guides/hcl/variables
# Exclude all .pkrvars.hcl files, which are likely to contain sensitive data, 
# such as password, private keys, and other secrets. These should not be part of 
# version control as they are data points which are potentially sensitive and 
# subject to change depending on the environment.
#
packer/*.pkrvars.hcl

# For built boxes
packer/*.box


# ansible
ansible/local-configure.yml
ansible/.vagrant/
ansible/docs/_build/
ansible/roles/plone.plone_server
ansible/roles/jnv.unattended-upgrades
ansible/roles/tersmitten.fail2ban
ansible/roles/ANXS.hostname
ansible/roles/ANXS.apt
ansible/._*
ansible/bin/
ansible/lib/
ansible/include/
ansible/local/
ansible/tests.out
ansible/*.retry
ansible/*.log
ansible/vbox_host.cfg
ansible/.DS_Store
ansible/*.py[co]


# terraform-ami
# Local .terraform directories
terraform-ami/.terraform/*

# .tfstate files
terraform-ami/*.tfstate
terraform-ami/*.tfstate.*

# Crash log files
terraform-ami/crash.log
terraform-ami/crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
terraform-ami/*.tfvars
terraform-ami/*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
terraform-ami/override.tf
terraform-ami/override.tf.json
terraform-ami/*_override.tf
terraform-ami/*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
terraform-ami/.terraformrc
terraform-ami/terraform.rc


# terraform
# Local .terraform directories
terraform/.terraform/*

# .tfstate files
terraform/*.tfstate
terraform/*.tfstate.*

# Crash log files
terraform/crash.log
terraform/crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
terraform/*.tfvars
terraform/*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
terraform/override.tf
terraform/override.tf.json
terraform/*_override.tf
terraform/*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
terraform/.terraformrc
terraform/terraform.rc


# nodejs
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port


### sonarqube
.sonar
.scannerwork